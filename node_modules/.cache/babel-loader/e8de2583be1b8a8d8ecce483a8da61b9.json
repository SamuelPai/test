{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sampai/Desktop/Tutoring/studentWork/AndyMunro/reactEmployeeDirectory.io/src/components/DataDisplay/index.js\";\nimport { useEffect, useState } from \"react\";\nimport Moment from 'react-moment';\nimport \"./style.css\";\n\nfunction DataDisplay(props) {\n  //   const [sortedNames, setSortedNames] = useState(null);\n  //   const firstName = props.results;\n  //   let sortedFirstNames = [firstName];\n  // console.log(\"this is what you want\", sortedFirstNames);\n  //   if (sortedNames !== null) {\n  //       sortedNames.sort((a, b) => {\n  //       if (a[sortedFirstNames] < b[sortedFirstNames]){\n  //         return 1;\n  //       }\n  //       if (a[sortedFirstNames] > b[sortedFirstNames]){\n  //         return -1;\n  //       }\n  //         return 0;\n  //     });\n  //   };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"emp-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"DOB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.results.map((results, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"employee-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"emp-list-img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: results.title,\n              className: \"img.fluid\",\n              src: results.picture.medium\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 23\n            }, this)\n          }, results.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"emp-list-name\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [results.name.first, \" \", results.name.last]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 23\n            }, this)\n          }, results.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"emp-list-phone\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: results.cell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 23\n            }, this)\n          }, results.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"emp-list-email\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: results.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 23\n            }, this)\n          }, results.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"emp-list-bday\",\n            children: /*#__PURE__*/_jsxDEV(Moment, {\n              date: results.dob.date,\n              format: \"MM/DD/YYYY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 23\n            }, this)\n          }, results.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DataDisplay;\nexport default DataDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"sources":["/Users/sampai/Desktop/Tutoring/studentWork/AndyMunro/reactEmployeeDirectory.io/src/components/DataDisplay/index.js"],"names":["useEffect","useState","Moment","DataDisplay","props","results","map","index","title","picture","medium","name","first","last","cell","email","dob","date"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,aAAP;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,sBACE;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA,8BACM;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADN,eAYM;AAAA,kBACCA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,CAACD,OAAD,EAAUE,KAAV,kBACf;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEF,OAAO,CAACG,KAAlB;AAAyB,cAAA,SAAS,EAAC,WAAnC;AAA+C,cAAA,GAAG,EAAEH,OAAO,CAACI,OAAR,CAAgBC;AAApE;AAAA;AAAA;AAAA;AAAA;AADF,aAAkCL,OAAO,CAACE,KAA1C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,mCACE;AAAA,yBAAIF,OAAO,CAACM,IAAR,CAAaC,KAAjB,OAAyBP,OAAO,CAACM,IAAR,CAAaE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,aAAmCR,OAAO,CAACE,KAA3C;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAI,YAAA,SAAS,EAAC,gBAAd;AAAA,mCACE;AAAA,wBAAIF,OAAO,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,aAAoCT,OAAO,CAACE,KAA5C;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI;AAAI,YAAA,SAAS,EAAC,gBAAd;AAAA,mCACE;AAAA,wBAAIF,OAAO,CAACU;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,aAAoCV,OAAO,CAACE,KAA5C;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAEF,OAAO,CAACW,GAAR,CAAYC,IAA1B;AAAgC,cAAA,MAAM,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF,aAAmCZ,OAAO,CAACE,KAA3C;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AADD;AAAA;AAAA;AAAA;AAAA,cAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCC;;KA1DMJ,W;AA6DT,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport Moment from 'react-moment';\nimport \"./style.css\";\n\nfunction DataDisplay(props) {\n\n  //   const [sortedNames, setSortedNames] = useState(null);\n  //   const firstName = props.results;\n  //   let sortedFirstNames = [firstName];\n  // console.log(\"this is what you want\", sortedFirstNames);\n  //   if (sortedNames !== null) {\n  //       sortedNames.sort((a, b) => {\n  //       if (a[sortedFirstNames] < b[sortedFirstNames]){\n  //         return 1;\n  //       }\n  //       if (a[sortedFirstNames] > b[sortedFirstNames]){\n  //         return -1;\n  //       }\n  //         return 0;\n  //     });\n  //   };\n  \n\n\n  return (\n    <div>\n      <table className=\"emp-list\" >\n            <thead>\n                <tr>\n                    <th scope=\"col\">Image</th>\n                    <th scope=\"col\">\n                      Name\n                    </th>\n                    <th scope=\"col\">Phone</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">DOB</th>\n                </tr>\n            </thead>\n            <tbody>\n            {props.results.map((results, index) => (\n                <tr className=\"employee-data\" >\n                    <td className=\"emp-list-img\" key={results.index}>\n                      <img alt={results.title} className=\"img.fluid\" src={results.picture.medium} />\n                    </td>    \n                    <td className=\"emp-list-name\" key={results.index}>\n                      <p>{results.name.first} {results.name.last}</p>\n                    </td>\n                    <td className=\"emp-list-phone\" key={results.index}>\n                      <p>{results.cell}</p>\n                    </td> \n                    <td className=\"emp-list-email\" key={results.index}>\n                      <p>{results.email}</p>\n                    </td> \n                    <td className=\"emp-list-bday\" key={results.index}>\n                      <Moment date={results.dob.date} format= \"MM/DD/YYYY\"/>\n                    </td>                                       \n                </tr>\n            ))}\n            </tbody>\n        </table>\n    </div>\n    );\n  }\n  \n\nexport default DataDisplay;\n\n"]},"metadata":{},"sourceType":"module"}