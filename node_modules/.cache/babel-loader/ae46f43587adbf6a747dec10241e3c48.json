{"ast":null,"code":"import _slicedToArray from\"/Users/sampai/Desktop/Tutoring/studentWork/AndyMunro/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{useEffect,useState}from\"react\";import Container from\"../components/Container\";import DataDisplay from\"../components/DataDisplay\";import API from\"../utils/API\";import SearchForm from\"../components/SearchForm\";// import SearchResults from \"../components/SearchResults\"\n// import EmployeeContext from \"../utils/EmployeeContext\"\nfunction Home(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),EmployeeData=_useState2[0],setEmployeeData=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),DisplayData=_useState8[0],setDisplayData=_useState8[1];// const [sortByName, setSortByName] = useState([])\nuseEffect(function(){//    if nothing in search parameter then populate all users\nif(!search){return API.getUsers().then(function(res){console.log(res);if(res.data.length===0){throw new Error(\"please enter a parameter\");}if(res.data.status===\"error\"){throw new Error(res.data.message);}setEmployeeData(res.data.results);setDisplayData(res.data.results);// setSortByfirstName(res.data.results.name.first)\n}).catch(function(error){return setError(error);});}else{// if there is input in the search bar trigger employee search\nEmployeeSearch(search);}// searches as you enter letters or numbers into search parameter.\n},[search]);var handleInputChange=function handleInputChange(event){event.preventDefault();setSearch(event.target.value);// displays the searched for data \nsetDisplayData(EmployeeSearch(search));};function EmployeeSearch(search){// sets employee data to search data after it is filtered\nvar searchData=[];searchData=EmployeeData.filter(function(employee){return employee.name.first.toLowerCase().includes(search);});return searchData;}// const handleInputChange = event => {\n//     setSortByfirstName(event.target.value);\n// }\n// function sortByFirstName(props)\n//  let firstNames =[];\n//  firstNames = employee.name.first;\n//  sortedNames.sort((a, b) => {\n//      if(a.name < b.name) {\n//          return -1;\n//      }\n//      if (a.name > b.name) {\n//          return 1;\n//      }\n//      return 0;\n//  });\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[\"Home\",/*#__PURE__*/_jsxs(Container,{style:{minHeight:\"100vh\"},children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"Search Employee Info\"}),/*#__PURE__*/_jsx(SearchForm,{handleInputChange:handleInputChange,results:search}),error,/*#__PURE__*/_jsx(DataDisplay,{results:DisplayData})]})]});};export default Home;","map":{"version":3,"sources":["/Users/sampai/Desktop/Tutoring/studentWork/AndyMunro/test/src/pages/Home.js"],"names":["useEffect","useState","Container","DataDisplay","API","SearchForm","Home","EmployeeData","setEmployeeData","search","setSearch","error","setError","DisplayData","setDisplayData","getUsers","then","res","console","log","data","length","Error","status","message","results","catch","EmployeeSearch","handleInputChange","event","preventDefault","target","value","searchData","filter","employee","name","first","toLowerCase","includes","minHeight"],"mappings":"wQAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA;AACA;AAEA,QAASC,CAAAA,IAAT,EAAiB,eAC2BL,QAAQ,CAAC,EAAD,CADnC,wCACNM,YADM,eACQC,eADR,8BAEeP,QAAQ,CAAC,EAAD,CAFvB,yCAENQ,MAFM,eAEEC,SAFF,8BAGaT,QAAQ,CAAC,EAAD,CAHrB,yCAGNU,KAHM,eAGCC,QAHD,8BAIyBX,QAAQ,CAAC,EAAD,CAJjC,yCAINY,WAJM,eAIOC,cAJP,eAKb;AAEDd,SAAS,CAAC,UAAM,CACf;AACG,GAAI,CAACS,MAAL,CAAa,CACT,MAAOL,CAAAA,GAAG,CAACW,QAAJ,GACNC,IADM,CACD,SAAAC,GAAG,CAAI,CAETC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAEA,GAAIA,GAAG,CAACG,IAAJ,CAASC,MAAT,GAAoB,CAAxB,CAA2B,CACvB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,0BAAV,CAAN,CACF,CACD,GAAIL,GAAG,CAACG,IAAJ,CAASG,MAAT,GAAoB,OAAxB,CAAgC,CAC5B,KAAM,IAAID,CAAAA,KAAJ,CAAUL,GAAG,CAACG,IAAJ,CAASI,OAAnB,CAAN,CACH,CACDhB,eAAe,CAACS,GAAG,CAACG,IAAJ,CAASK,OAAV,CAAf,CACAX,cAAc,CAACG,GAAG,CAACG,IAAJ,CAASK,OAAV,CAAd,CACA;AACH,CAdK,EAeLC,KAfK,CAeE,SAAAf,KAAK,QAAIC,CAAAA,QAAQ,CAACD,KAAD,CAAZ,EAfP,CAAP,CAgBF,CAjBF,IAiBM,CACD;AACAgB,cAAc,CAAClB,MAAD,CAAd,CACH,CACD;AACC,CAxBG,CAwBD,CAACA,MAAD,CAxBC,CAAT,CA0BH,GAAMmB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,KAAK,CAAI,CAC/BA,KAAK,CAACC,cAAN,GACApB,SAAS,CAACmB,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAT,CACA;AACAlB,cAAc,CAACa,cAAc,CAAClB,MAAD,CAAf,CAAd,CAEH,CAND,CAQA,QAASkB,CAAAA,cAAT,CAAwBlB,MAAxB,CAA+B,CAC/B;AACA,GAAIwB,CAAAA,UAAU,CAAG,EAAjB,CAEAA,UAAU,CAAG1B,YAAY,CAAC2B,MAAb,CAAoB,SAAAC,QAAQ,QACrCA,CAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,WAApB,GAAkCC,QAAlC,CAA2C9B,MAA3C,CADqC,EAA5B,CAAb,CAGI,MAAOwB,CAAAA,UAAP,CAEH,CACD;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,mBACI,2CAEI,MAAC,SAAD,EAAW,KAAK,CAAE,CAAEO,SAAS,CAAE,OAAb,CAAlB,wBACQ,WAAI,SAAS,CAAC,aAAd,kCADR,cAEQ,KAAC,UAAD,EACI,iBAAiB,CAAIZ,iBADzB,CAEI,OAAO,CAAEnB,MAFb,EAFR,CAMaE,KANb,cAOQ,KAAC,WAAD,EACA,OAAO,CAAEE,WADT,EAPR,GAFJ,GADJ,CAiBC,EAED,cAAeP,CAAAA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Container from \"../components/Container\";\nimport DataDisplay from \"../components/DataDisplay\"\nimport API from \"../utils/API\"\nimport SearchForm from \"../components/SearchForm\";\n// import SearchResults from \"../components/SearchResults\"\n// import EmployeeContext from \"../utils/EmployeeContext\"\n\nfunction Home () {\n    const [EmployeeData, setEmployeeData] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [DisplayData, setDisplayData] = useState([]);\n    // const [sortByName, setSortByName] = useState([])\n\n   useEffect(() => {\n    //    if nothing in search parameter then populate all users\n       if (!search) {\n           return API.getUsers()\n           .then(res => {\n\n               console.log(res);\n\n               if (res.data.length === 0) {\n                   throw new Error(\"please enter a parameter\");\n                }\n                if (res.data.status === \"error\"){\n                    throw new Error(res.data.message);\n                }\n                setEmployeeData(res.data.results);\n                setDisplayData(res.data.results)\n                // setSortByfirstName(res.data.results.name.first)\n            })\n            .catch (error => setError(error));\n        }else{\n            // if there is input in the search bar trigger employee search\n            EmployeeSearch(search)\n        }\n        // searches as you enter letters or numbers into search parameter.\n        }, [search]);\n\nconst handleInputChange = event => {\n    event.preventDefault()\n    setSearch(event.target.value);\n    // displays the searched for data \n    setDisplayData(EmployeeSearch(search));\n    \n};\n\nfunction EmployeeSearch(search){\n// sets employee data to search data after it is filtered\nlet searchData = []\n\nsearchData = EmployeeData.filter(employee =>\n    employee.name.first.toLowerCase().includes(search))  \n    \n    return searchData;\n\n}\n// const handleInputChange = event => {\n//     setSortByfirstName(event.target.value);\n// }\n// function sortByFirstName(props)\n\n//  let firstNames =[];\n\n//  firstNames = employee.name.first;\n \n//  sortedNames.sort((a, b) => {\n//      if(a.name < b.name) {\n//          return -1;\n//      }\n//      if (a.name > b.name) {\n//          return 1;\n//      }\n//      return 0;\n//  });\n   \n\nreturn (\n    <div>\n        Home\n        <Container style={{ minHeight: \"100vh\" }}>\n                <h1 className=\"text-center\">Search Employee Info</h1>\n                <SearchForm\n                    handleInputChange = {handleInputChange}\n                    results={search}\n                    />\n                    {error}\n                <DataDisplay \n                results={DisplayData} \n                />\n        </Container>\n    </div>\n);\n\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}